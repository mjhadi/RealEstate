<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
        <meta charset="utf-8">
        <title>Circles</title>
        <style>
            /* Always set the map height explicitly to define the size of the div
             * element that contains the map. */
            #map {
                height: 100%;
            }
            /* Optional: Makes the sample page fill the window. */
            html, body {
                height: 100%;
                margin: 0;
                padding: 0;
            }
        </style>

    </head>
    <body>
        <div id="map"></div>

        <script>
            // This example creates circles on the map, representing populations in North
            // America.

            // First, create an object containing LatLng and population for each city.

            var citymap = {
            {% for p in list %}

                    p.propertyType: {
                    center: {lat: p.latitude, lng: p.longitude},
                            population: p.price
                    }
            {% endfor %}
              };  
                function initMap() {
                // Create the map.
                var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 4,
                     center: {lat: 37.090, lng: -95.712},
                        mapTypeId: 'terrain'
                });
                // Construct the circle for each value in citymap.
                // Note: We scale the area of the circle based on the population.
                for (var city in citymap) {
                // Add the circle for this city to the map.
                var cityCircle = new google.maps.Circle({
                strokeColor: '#FF0000',
                        strokeOpacity: 0.8,
                        strokeWeight: 2,
                        fillColor: '#FF0000',
                        fillOpacity: 0.35,
                        map: map,
                        center: citymap[city].center,
                        radius: Math.sqrt(citymap[city].population) * 100
                });
                }

                }
                var infowindow = new google.maps.InfoWindow();
                var service = new google.maps.places.PlacesService(map);
                var image = '/images/homepointer.png';
                var marker = new google.maps.Marker({
                map: map,
                        position: posLatLng,
                        //  title: "{{property.propertyType}}",
                        icon:image
                });
                service.getDetails({
                placeId: 'ChIJN1t_tDeuEmsRUsoyG83frY4'
                }, function (place, status) {
                if (status === google.maps.places.PlacesServiceStatus.OK) {

                google.maps.event.addListener(marker, 'click', function () {
                infowindow.setContent('<div><strong>' + place.name + '</strong><br>' +
                        'Place ID: ' + place.place_id + '<br>' +
                        place.formatted_address + '</div>');
                infowindow.open(map, this);
                });
                }
                });
        </script>

        <script async defer
                src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBi_RmcXLnf2aoOIGzGGVPdrnaWQD2jrWs&callback=initMap">
        </script>
    </body>
</html>